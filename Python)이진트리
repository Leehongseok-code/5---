class Node():
    def __init__(self,item):
        self.data=item
        self.right=None
        self.left=None
    
        
class BTree():
    def __init__(self):
        self.root=None
    def insert(self,data):
        self.root=self.insert_value(self.root,data)
        return self.root is not None

    def insert_value(self,node,data):
        if node is None:
            node=Node(data)
        else:
            if data<=node.data:
                node.left=self.insert_value(node.left,data)
            else:
                node.right=self.insert_value(node.right,data)
        return node
    def find(self,key):
        return self.find_value(self.root,key)

    def find_value(self,root,key):
        if root is None or root.data==key:
            return root is not None
        elif key<root.data:
            return self.find_value(root.left,key)
        else:
            return self.find_value(root.right,key)

bst=BTree()
bst.insert(15)
print(bst.find(15))
